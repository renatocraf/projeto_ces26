{"version":3,"sources":["logo.svg","App.js","advertise.js","search.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","src","logo","alt","href","target","rel","AdvertiseForm","props","state","visible","username","product","product_description","price","address","showForm","bind","myChangeHandler","mySubmitHandler","this","setState","event","preventDefault","Number","alert","nam","name","val","value","class","onClick","novalidate","onSubmit","for","type","id","onChange","required","step","min","placeholder","React","Component","Search","option","handleClick","style","width","height","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.da6e9806.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nclass AdvertiseForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            username: '',\n            product: '',\n            product_description: '',\n            price: 0.0,\n            address: '',\n        };\n        this.showForm = this.showForm.bind(this);\n        this.myChangeHandler = this.myChangeHandler.bind(this);\n        this.mySubmitHandler = this.mySubmitHandler.bind(this);\n    }\n\n    showForm() {\n        this.setState({visible: !this.state.visible});\n    }\n\n    mySubmitHandler(event) {\n        event.preventDefault();\n        let price = this.state.price;\n        if(!Number(price)){\n            alert(\"O preço precisa ser um valor numérico\")\n        }\n        else if(price > 0){\n            alert(\"O valor precisa ser positivo\");\n        }\n    }\n\n    myChangeHandler(event) {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n    }\n\n    render() {\n        return(\n            <div>\n                <div class=\"btn btn-outline-secondary\" onClick={this.showForm}>\n                    {this.state.visible ? 'Fechar formulário':'Comece agora!'}\n                </div>\n                {this.state.visible &&\n                <div class=\"col-md-8 order-md-1\">\n                <h4 class=\"mb-3\">Cadastro de Produto</h4>\n                <form class=\"needs-validation\" novalidate onSubmit={this.mySubmitHandler}>\n                    <div class=\"row\">\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"username\">Usuário</label>\n                        <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" onChange={this.myChangeHandler} required/>\n                        <div class=\"invalid-feedback\">\n                        Nome de usuário inválido.\n                        </div>\n                    </div>\n                    </div>\n\n                    <div class=\"row\">\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"product\">Produto</label>\n                        <input type=\"text\" class=\"form-control\" id=\"product\" name=\"product\" onChange={this.myChangeHandler} required/>\n                        <div class=\"invalid-feedback\">\n                        Nome de produto inválido.\n                        </div>\n                    </div>\n                    </div>\n\n                    <div class=\"row\">\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"product_description\">Descrição do Produto</label>\n                        <input type=\"text\" class=\"form-control\" id=\"product_description\" name=\"product_description\" onChange={this.myChangeHandler} required/>\n                        <div class=\"invalid-feedback\">\n                        Descrição do Produto inválida.\n                        </div>\n                    </div>\n                    </div>\n\n                    <div class=\"row\">\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"price\">Preço</label>\n                        <input type=\"number\" step=\"0.01\" min=\"0\" class=\"form-control\" id=\"price\" name=\"price\" onChange={this.myChangeHandler} required/>\n                        <div class=\"invalid-feedback\">\n                        Valor inválido.\n                        </div>\n                    </div>\n                    </div>\n            \n                    <div class=\"mb-3\">\n                    <label for=\"address\">Endereço</label>\n                    <input type=\"text\" class=\"form-control\" id=\"address\" placeholder=\"1234 Main St\" required/>\n                    <div class=\"invalid-feedback\">\n                        Por favor, escreva o endereço do seu estabelecimento.\n                    </div>\n                    </div>\n            \n                    <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\">Finalizar Cadastro de Produto</button>\n                </form>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default AdvertiseForm;","import React from 'react';\n\nclass Search extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            option: '',\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(event) {\n        this.setState({option: event.target.name});\n    }\n\n    render() {\n        return(\n            <div class=\"iza-container container\">\n                <div class=\"container container-categories-stripe mt-5 mb-4 category-section-margin-bottom\">\n                    <div class=\"row\">\n                        <div class=\"col-12 px-0 px-md-4\">\n                            <ul class=\"list-unstyled mb-0 list-inline category-stripe pb-3 category-stripe-margin-bottom\">\n                                <li class=\"list-inline-item\">\n                                    <div class=\"btn btn-outline-secondary\" name=\"food\" onClick={this.handleClick}>\n                                        <span class=\"icon-background\">\n                                            <img src=\"food.png\" style={{width:'64px', height:'64px'}} alt=\"\"/>\n                                        </span>\n                                        <small>Comida</small>\n                                    </div>\n                                </li>\n                                <li class=\"list-inline-item\">\n                                    <div class=\"btn btn-outline-secondary\" name=\"service\" onClick={this.handleClick}>\n                                        <span class=\"icon-background\">\n                                            <img src=\"service.png\" style={{width:'64px', height:'64px'}} alt=\"\"/>\n                                        </span>\n                                        <small>Serviços</small>\n                                    </div>\n                                </li>\n                                <li class=\"list-inline-item\">\n                                    <div class=\"btn btn-outline-secondary\" name=\"blabla\" onClick={this.handleClick}>\n                                        <span class=\"icon-background\">\n                                            <img src=\"images/blabla.png\" style={{width:'64px', height:'64px'}} alt=\"\"/>\n                                        </span>\n                                        <small>BlaBla</small>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                {this.state.option !== '' && <div class=\"my-3 p-3 bg-white rounded shadow-sm\">OIEEE</div>}\n            </div>\n        );\n    }\n\n}\n\nexport default Search;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AdvertiseForm from './advertise';\nimport Search from './search';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <AdvertiseForm />\n  </React.StrictMode>,\n  document.getElementById('advertiseForm')\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Search />\n  </React.StrictMode>,\n  document.getElementById('search')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}